diff --git a/extras/go-mitmproxy/cert/cert.go b/extras/go-mitmproxy/cert/cert.go
index 4a08303..b57fad7 100644
--- a/extras/go-mitmproxy/cert/cert.go
+++ b/extras/go-mitmproxy/cert/cert.go
@@ -22,6 +22,7 @@ import (
 	"github.com/golang/groupcache/lru"
 	"github.com/golang/groupcache/singleflight"
 	log "github.com/sirupsen/logrus"
+	"golang.org/x/net/publicsuffix"
 )
 
 // reference
@@ -300,6 +301,14 @@ func (ca *CA) saveCert() error {
 }
 
 func (ca *CA) GetCert(commonName string) (*tls.Certificate, error) {
+	ip := net.ParseIP(commonName)
+	if ip == nil {
+		eTLD1, err := publicsuffix.EffectiveTLDPlusOne(commonName)
+		if err == nil && commonName != eTLD1 {
+			commonName = strings.SplitN(commonName, ".", 2)[1]
+		}
+	}
+
 	ca.cacheMu.Lock()
 	if val, ok := ca.cache.Get(commonName); ok {
 		ca.cacheMu.Unlock()
@@ -309,7 +318,7 @@ func (ca *CA) GetCert(commonName string) (*tls.Certificate, error) {
 	ca.cacheMu.Unlock()
 
 	val, err := ca.group.Do(commonName, func() (interface{}, error) {
-		cert, err := ca.DummyCert(commonName)
+		cert, err := ca.DummyCert(commonName, ip)
 		if err == nil {
 			ca.cacheMu.Lock()
 			ca.cache.Add(commonName, cert)
@@ -326,7 +335,7 @@ func (ca *CA) GetCert(commonName string) (*tls.Certificate, error) {
 }
 
 // TODO: 是否应该支持多个 SubjectAltName
-func (ca *CA) DummyCert(commonName string) (*tls.Certificate, error) {
+func (ca *CA) DummyCert(commonName string, ip net.IP) (*tls.Certificate, error) {
 	log.Debugf("ca DummyCert: %v", commonName)
 	template := &x509.Certificate{
 		SerialNumber: big.NewInt(time.Now().UnixNano() / 100000),
@@ -340,11 +349,10 @@ func (ca *CA) DummyCert(commonName string) (*tls.Certificate, error) {
 		ExtKeyUsage:        []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth, x509.ExtKeyUsageClientAuth},
 	}
 
-	ip := net.ParseIP(commonName)
 	if ip != nil {
 		template.IPAddresses = []net.IP{ip}
 	} else {
-		template.DNSNames = []string{commonName}
+		template.DNSNames = []string{commonName, "*." + commonName}
 	}
 
 	certBytes, err := x509.CreateCertificate(rand.Reader, template, &ca.RootCert, &ca.PrivateKey.PublicKey, &ca.PrivateKey)
diff --git a/extras/go-mitmproxy/go.mod b/extras/go-mitmproxy/go.mod
index ba68a8c..08f2c3c 100644
--- a/extras/go-mitmproxy/go.mod
+++ b/extras/go-mitmproxy/go.mod
@@ -10,10 +10,11 @@ require (
 	github.com/satori/go.uuid v1.2.0
 	github.com/sirupsen/logrus v1.8.1
 	github.com/tidwall/match v1.1.1
+	golang.org/x/net v0.12.0
 )
 
 require (
 	golang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17 // indirect
-	golang.org/x/sys v0.0.0-20220624220833-87e55d714810 // indirect
+	golang.org/x/sys v0.10.0 // indirect
 	gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect
 )
diff --git a/extras/go-mitmproxy/go.sum b/extras/go-mitmproxy/go.sum
index 1f45917..82becbe 100644
--- a/extras/go-mitmproxy/go.sum
+++ b/extras/go-mitmproxy/go.sum
@@ -25,8 +25,10 @@ github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=
 github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=
 golang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17 h1:3MTrJm4PyNL9NBqvYDSj3DHl46qQakyfqfWo4jgfaEM=
 golang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17/go.mod h1:lgLbSvA5ygNOMpwM/9anMpWVlVJ7Z+cHWq/eFuinpGE=
+golang.org/x/net v0.12.0 h1:cfawfvKITfUsFCeJIHJrbSxpeu/E81khclypR0GVT50=
+golang.org/x/net v0.12.0/go.mod h1:zEVYFnQC7m/vmpQFELhcD1EWkZlX69l4oqgmer6hfKA=
 golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20220624220833-87e55d714810 h1:rHZQSjJdAI4Xf5Qzeh2bBc5YJIkPFVM6oDtMFYmgws0=
-golang.org/x/sys v0.0.0-20220624220833-87e55d714810/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
+golang.org/x/sys v0.10.0 h1:SqMFp9UcQJZa+pmYuAKjd9xq1f0j5rLcDIk0mj4qAsA=
+golang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
 gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
